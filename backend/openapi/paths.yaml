openapi: 3.0.3
info:
  title: Code Arena Newbies Coder
  description: |-
    Welcome to the Code Arena API! This API allows developers to access and integrate the functionality of Code Arena with other applications and to create new applications.
    ## Overview
    The Code Arena API provides programmatic access to our coding challenges platform. It allows you to:
    - Fetch a list of coding challenges
    - Submit solutions and get real-time feedback
    - Access user profiles and statistics
    - Participate in real-time coding battles
    Some useful links:
    - [Code Arena repository](https://github.com/Newbies-Coder/code-arena.git)
  contact:
    email: duongquocnam224400@gmail.com
  version: 1.0.11

servers:
  - url: http://localhost:8080
tags:
  - name: auth
    description: Operations about authentication
  - name: user
    description: Operations about user
  - name: banner
    description: Operations about banner
  - name: room
    description: Operations about room
paths:
  /auth/facebook:
    get:
      tags:
        - auth
      summary: User login with facebook
      description: User login with facebook
      operationId: authFacebook
      responses:
        '200':
          description: Login successfully
  /auth/github:
    get:
      tags:
        - auth
      summary: User login with github
      description: User login with github
      operationId: authGithub
      responses:
        '200':
          description: Login successfully
  /auth/google:
    get:
      tags:
        - auth
      summary: User login with google
      description: User login with google
      operationId: authGoogle
      responses:
        '200':
          description: Login successfully
  /auth/linkedin:
    get:
      tags:
        - auth
      summary: User login with linkedin
      description: User login with linkedin
      operationId: authLinkedin
      responses:
        '200':
          description: Login successfully
  /auth/roles:
    get:
      tags:
        - auth
      summary: Get all list user by role into the system
      description: Get all list user by role into the system
      operationId: getAllUserByRole
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users on a page
          required: false
          schema:
            type: integer
            example: 10
        - name: includes
          in: query
          description: Please enter includes contains roles_name
          required: false
          schema:
            type: string
            example: user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get user role successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get user role successfully
                  data:
                    $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /auth/roles
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /auth:
    get:
      tags:
        - auth
      summary: Get all user into the system
      description: Get all user into the system
      operationId: getAllUser
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Get all user successfully'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /auth/pagination-user:
    get:
      tags:
        - auth
      summary: Get all user pagination into the system
      description: Get all user pagination into the system
      operationId: getAllUserPagination
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users on a page
          required: false
          schema:
            type: integer
            example: 10
        - in: query
          name: userId
          description: Optional query string to filter users
          schema:
            type: string
        - in: query
          name: sort_by
          schema:
            type: string
            example: _id
          description: Optional filter to get a specific _id by its type
        - in: query
          name: created_at
          schema:
            type: string
            enum: [asc, desc]
            default: 'asc'
          description: Order of sorting (ascending or descending)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileSchema'
                  page:
                    type: integer
                  limit:
                    type: integer
                  total_page:
                    type: integer
                  total_items:
                    type: integer
        '400':
          description: Bad request (e.g., invalid query parameters)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Bad request (e.g., invalid query parameters)
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /auth/create-user:
    post:
      tags:
        - auth
      summary: Create user by admin into the system
      description: Create user by admin into the system
      operationId: createUserByAdmin
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserAdminSchema'
        required: true
      responses:
        '201':
          description: Create account user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    example: Create account successfully.
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: This email address is already in use. Please register with a different email address!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /auth/update-user/{id}:
    put:
      tags:
        - auth
      summary: Update profile user by admin
      description: Update profile user by admin successfully!
      operationId: updateUserByAdmin
      parameters:
        - name: id
          in: path
          description: Please enter the user_id you want to update by admin
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      requestBody:
        description: Information profile user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserByAdminSchema'
        required: true
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Update profile user by admin successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Update profile user by admin successfully!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /auth/delete-user:
    delete:
      tags:
        - auth
      summary: Delete user
      description: Delete user by user_id and delete a many user
      operationId: deleteUser
      parameters:
        - name: id
          in: query
          description: Please enter the user_id you want to delete
          schema:
            type: array
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Delete many user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Delete many user successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/login:
    post:
      tags:
        - user
      summary: Login user into the system
      description: User login into the system
      operationId: loginUser
      requestBody:
        description: Login information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSchema'
        required: true
      responses:
        '200':
          description: Login successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Login successfully
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 656b0bbd3b0e9defe34fca1a
                      email:
                        type: string
                        example: john@email.com
                      username:
                        type: string
                        example: user123
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                      refresh-token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Request that the password be checked again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: The password entered is incorrect.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The email address doesn't exist. Please try the valid one or simply register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: login
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/register:
    post:
      tags:
        - user
      summary: Register user into the system
      description: Register user into the system
      operationId: registerUser
      requestBody:
        description: Register information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSchema'
        required: true
      responses:
        '201':
          description: Send verification email register successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    example: Create account successfully. Please check email verify OTP!
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 656b0bbd3b0e9defe34fca1a
                      email:
                        type: string
                        example: john@email.com
                      username:
                        type: string
                        example: user123
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                      refresh_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: This email address is already in use. Please register with a different email address!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/logout:
    post:
      tags:
        - user
      summary: Logs out current logged in user session
      description: Logs out current logged in user session
      operationId: logoutUser
      security:
        - BearerAuth: []
      requestBody:
        description: Auth logout
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: string
        required: true
      responses:
        '200':
          description: Logout successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Logout successfully
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/verify-otp:
    post:
      tags:
        - user
      summary: Verify OTP
      description: Verifies the One-Time Password (OTP) sent to the user's email.
      operationId: verifyUserOTP
      requestBody:
        description: Auth verify OTP
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  example: string
                  description: The OTP to be verified
        required: true
      responses:
        '200':
          description: OTP successfully verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: You have successfully registered after completing the authentication procedure!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: OTP has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: OTP has expired. Please resubmit the OTP to get a fresh email with it!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: User not found or already verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: User not found or already verified
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: verify-otp
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/resend-verify-otp:
    post:
      tags:
        - user
      summary: User verification OTP resend
      description: Send again to confirm the OTP user
      operationId: resendVerifyOTP
      requestBody:
        description: Resend email verify OTP
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: string
                  description: Resend email resend verify OTP
        required: true
      responses:
        '200':
          description: Successfully resend verify OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Resend verify OTP successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please check refresh token!
                  data:
                    type: object
                    properties:
                      refresh-token:
                        type: string
                        example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/refresh-token:
    post:
      tags:
        - user
      summary: Get back the access token
      description: Get back the access token
      operationId: refreshToken
      requestBody:
        description: Information to retrieve access token
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: string
        required: true
      responses:
        '200':
          description: Successfully retrieved access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Refresh token successfully
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 656b0bbd3b0e9defe34fca1a
                      email:
                        type: string
                        example: john@email.com
                      username:
                        type: string
                        example: user123
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                      refresh_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please check refresh token!
                  data:
                    type: object
                    properties:
                      refresh-token:
                        type: string
                        example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/forgot-password:
    post:
      tags:
        - user
      summary: Forgot password
      description: Forgot-password
      operationId: forgotPassword
      requestBody:
        description: Your email information
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: string
        required: true
      responses:
        '200':
          description: Send email forgot password successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Email with forgotten password was successfully delivered!
                  data:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: 32e24879ab19f5b36de6hj12
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The email address doesn't exist. Please try the valid one or simply register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: forgot-password
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/verify-forgot-password:
    post:
      tags:
        - user
      summary: Verify forgot-password token
      description: Verifies the One-Time Password (forgot-password token) sent to the user's email.
      operationId: verifyForgotpasswordToken
      requestBody:
        description: Auth verify forgot-password token
        content:
          application/json:
            schema:
              type: object
              properties:
                forgot_password_token:
                  type: string
                  example: string
                  description: The forgot-password token to be verified
        required: true
      responses:
        '200':
          description: Verifies forgot-password token successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Verify forgot-password token successfully!
                  data:
                    type: object
                    properties:
                      userExist:
                        type: boolean
                      message:
                        type: string
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: forgot-password token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: Forgot-passwor token has expired
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: User not found or already verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: User not found or already verified
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /verify-forgot-password
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/reset-password:
    post:
      tags:
        - user
      summary: Reset password
      description: Reset
      operationId: resetPassword
      requestBody:
        description: Reset password imformation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordSchema'
        required: true
      responses:
        '200':
          description: Reset password successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Reset password successfully. You can login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The email address doesn't exist. Please try the valid one or simply register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: reset-password
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/change-password:
    post:
      tags:
        - user
      summary: Change password
      description: User change passowrd
      operationId: changePassword
      security:
        - BearerAuth: []
      requestBody:
        description: Change password imformation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordSchema'
        required: true
      responses:
        '200':
          description: Change passowrd successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Password successfully changed. You may attempt to login once again.
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: change-password
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/follow/{id}:
    post:
      tags:
        - user
      summary: Follow user
      description: Follow user
      operationId: followUser
      parameters:
        - name: id
          in: path
          description: Please enter the user_id you want to follow
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Follow user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Follow user successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: User_id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: User_id is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/follows:
    get:
      tags:
        - user
      summary: List of users a users follows
      description: List of users a users follows
      operationId: getAllUserFollow
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get all follower list successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get all follower list successfully!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/followers:
    get:
      tags:
        - user
      summary: List of users a users followers
      description: List of users a users followers
      operationId: getAllUserFollowers
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get all followers list successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get all followers list successfully!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/not-follows:
    get:
      tags:
        - user
      summary: List of users a users not follows
      description: List of users a users not follows
      operationId: getAllUserNotFollow
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get the list of users that you don't follow successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get the list of users that you don't follow successfully!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/unfollow/{id}:
    delete:
      tags:
        - user
      summary: Unfollow user
      description: Unfollow user
      operationId: unfollowUser
      parameters:
        - name: id
          in: path
          description: Please enter the user_id you want to unfollow
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Unfollow user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Unfollow user successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: User_id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: User_id is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/profile/{id}:
    get:
      tags:
        - user
      summary: Get user by user_id
      description: Get user by user_id
      operationId: getUserByID
      parameters:
        - name: id
          in: path
          description: 'The user_id that needs to be fetched'
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User information was successfully retrieved!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get user infomation successfully
                  data:
                    $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: User_id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: User_id is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/profile:
    get:
      tags:
        - user
      summary: Get profile into the system
      description: Get profile into the system
      operationId: getMeProfile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get profile successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get profile successfully!
                  data:
                    $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    put:
      tags:
        - user
      summary: Update profile
      description: Update profile user successfully!
      operationId: updateMe
      requestBody:
        description: Information profile user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileSchema'
        required: true
      responses:
        '200':
          description: Update profile user successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Update profile user successfully!
                  data:
                    $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/avatar:
    post:
      tags:
        - user
      summary: Upload avatar user
      description: Upload avatar
      operationId: uploadAvatar
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation image upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Upload avatar successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Upload avatar successfully
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        type: string
                        example: 'http://res.cloudinary.com/de7hnxr0e/image/upload/v1701942785/avatar/it3nquretum21jkqv2ii.jpg'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Avatar image extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Avatar image extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/thumbnail:
    post:
      tags:
        - user
      summary: Upload thumbnail profile user
      description: Upload thumbnail profile user
      operationId: uploadThumbnail
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation thumbnail profile upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Upload thumbnail successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Upload thumbnail successfully!
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        type: string
                        example: 'http://res.cloudinary.com/de7hnxr0e/image/upload/v1701942785/avatar/it3nquretum21jkqv2ii.jpg'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Thumnail image extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Thumnail image extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/blocked:
    get:
      tags:
        - user
      summary: Get all list user blocked into the system
      description: Get all list user blocked into the system
      operationId: getAllUserBlocked
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users on a page
          required: false
          schema:
            type: integer
            example: 10
        - in: query
          name: created_at
          schema:
            type: string
            enum: [asc, desc]
            default: 'asc'
          description: Order of sorting (ascending or descending)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get blocked user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get blocked user successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        example: [{ id: '656b0bbd3b0e9defe34fcaq2', 'blockerId': '656b0bbd3b0e9defe34fca1a', 'blockedId': '656b0bbd3b0e9defe34fca1a' }]
                      pageIndex:
                        type: number
                        example: 0
                      pageSize:
                        type: number
                        example: 10
                      totalRow:
                        type: number
                        example: 1
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    post:
      tags:
        - user
      summary: Blocked user
      description: Blocked user
      operationId: insertBlocked
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              type: object
              properties:
                blockedId:
                  type: string
                  example: string
        required: true
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Blocked user successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Blocked user successfully!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '409':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: User already been blocked
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /@me/blocked
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/unblocked/{id}:
    delete:
      tags:
        - user
      summary: Delete blocked user list unblock
      description: Delete blocked user list unblock
      operationId: deleteBlockedUser
      parameters:
        - name: id
          in: path
          description: 'The user_id that needs to be delete'
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Delete blocked user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Delete many user successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/favorite:
    get:
      tags:
        - user
      summary: Get list closed friends into the system
      description: Get list closed friends into the system
      operationId: getUserFavorite
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users on a page
          required: false
          schema:
            type: integer
            example: 10
        - in: query
          name: created_at
          schema:
            type: string
            enum: [asc, desc]
            default: 'asc'
          description: Order of sorting (ascending or descending)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get list of closed friends successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get list of closed friends successfully!
                  data:
                    type: object
                    properties:
                      _id:
                        type: integer
                        format: int64
                        example: 656b0bbd3b0e9defe34fca1a
                      fullname:
                        type: string
                        example: 'User A'
                      username:
                        type: string
                        example: 'user123'
                      email:
                        type: string
                        example: john@email.com
                      date_of_birth:
                        type: string
                        example: '2000-02-22T00:00:00.000Z'
                      avatar:
                        type: string
                        example: ''
                      cover_photo:
                        type: string
                        example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    post:
      tags:
        - user
      summary: Add user to favorite friends list
      description: Add user to favorite friends list
      operationId: insertUserFavorite
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              type: object
              properties:
                friendId:
                  type: string
                  example: string
        required: true
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Add user to favorite friends list successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Add user to favorite friends list successfully!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '409':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: User already been blocked
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: favorite
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/favorite/{id}:
    delete:
      tags:
        - user
      summary: Remove user to favorite friend list
      description: Remove user to favorite friend list
      operationId: deleteFavoriteFriend
      parameters:
        - name: id
          in: path
          description: 'The user_id that needs to be delete'
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Delete user to favorite friend list successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Delete user to favorite friend list successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Invalid input or user_id format
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Invalid input or user_id format
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: user not found
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/test-token:
    post:
      tags:
        - user
      summary: Test token user into the system
      description: Test token user into the system
      operationId: testToken
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get token user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Test token successfully
                  data:
                    $ref: '#/components/schemas/TokenSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /banners:
    get:
      tags:
        - banner
      summary: Get all banner
      description: Retrieve a list of banners with pagination, sorting, and optional filtering by banner_id.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page index for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
        - in: query
          name: bannerId
          schema:
            type: string
          description: Optional filter to get a specific banner by its ID
        - in: query
          name: sort_by
          schema:
            type: string
            default: '_id'
          description: Field to sort the results by
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [asc, desc]
            default: 'asc'
          description: Order of sorting (ascending or descending)
      responses:
        '200':
          description: Get all banner successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get all banner successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/BannerSchema'
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 3
                      total_page:
                        type: integer
                        example: 2
                      total_items:
                        type: integer
                        example: 4
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    post:
      tags:
        - banner
      summary: Insert a new banner with images
      description: Inserts the banner details into the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                slug:
                  type: string
                  description: The slug for the banner
                description:
                  type: string
                  description: Description image for the banner
                url:
                  type: string
                  description: Image for the banner
      security:
        - BearerAuth: []
      responses:
        '201':
          description: Insert banner successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    example: Insert banner successfully!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /banners
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /banners/{id}:
    get:
      tags:
        - banner
      summary: Get banner by user_id
      description: Retrieve a list of banners with pagination, sorting, and optional filtering by user_id.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique ID of the user
      responses:
        '200':
          description: Get all banner with user_id successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get all banner with user_id successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/BannerSchema'
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 3
                      total_page:
                        type: integer
                        example: 2
                      total_items:
                        type: integer
                        example: 4
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    delete:
      tags:
        - banner
      summary: Delete a banner
      description: Deletes a banner from the database and associated storage based on its unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique ID of the banner to delete
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Banner successfully deleted (No Content)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 204
                  message:
                    example: Delete banners successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Invalid banner ID format
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Invalid banner ID format
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Banner not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Banner not found
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /upload/media:
    post:
      tags:
        - upload
      summary: Upload single image
      description: Upload single image
      operationId: uploadSingleImage
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation image upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Upload single image successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Upload single image successfully
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        type: string
                        example: 'http://res.cloudinary.com/de7hnxr0e/image/upload/v1701942785/avatar/it3nquretum21jkqv2ii.jpg'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Image extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Image extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /upload/media_multiple:
    post:
      tags:
        - upload
      summary: Uploads multiple images
      description: Allows for uploading multiple image files.
      operationId: uploadMultipleImage
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation image upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: array
                  items:
                    type: string
                    format: binary
        required: true
      responses:
        '200':
          description: Upload multiple image successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Upload multiple image successfully
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        type: string
                        example: 'http://res.cloudinary.com/de7hnxr0e/image/upload/v1701942785/avatar/it3nquretum21jkqv2ii.jpg'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Image extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Image extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms:
    get:
      tags:
        - room
      summary: Get chat room list
      description: Returns a list of chat rooms available in the system.
      operationId: getChatRoomList
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page index for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get all message successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get all message successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: The unique identifier of the chat room.
                            name:
                              type: string
                              description: The name of the chat room.
                            owner:
                              type: string
                              description: Unique identifier of the chat room manager.
                            type:
                              type: string
                              default: single
                              description: Type of chat room (single chat - group chat)
                            isPrivate:
                              type: boolean
                              default: false
                              description: Chat room status
                            pinMessage:
                              type: string
                              description: Pin important conversations
                            passowrd:
                              type: string
                              description: Chat room password
                            avatar:
                              type: string
                              description: Image representing the chat room
                            background:
                              type: string
                              description: Chat wallpaper
                            emote:
                              type: string
                              description: The icon represents the conversation
                            isDelete:
                              type: boolean
                              default: false
                              description: Chat room existence status
                            created_at:
                              type: string
                              format: date-time
                              description: The date and time when the chat room was created.
                            updated_at:
                              type: string
                              format: date-time
                              description: The date and time when the chat room was updated.
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 3
                      total_pages:
                        type: integer
                        example: 2
                      total_items:
                        type: integer
                        example: 4
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Unauthorized - API key is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal Server Error - Could not fetch the chat rooms
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    post:
      tags:
        - room
      summary: Create a new rooms
      description: Create the room details into the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The slug for the banner
                type:
                  type: string
                  description: Description image for the banner
                members:
                  type: array
                  description: Description list of members in the room
                  items:
                    type: string
      security:
        - BearerAuth: []
      responses:
        '201':
          description: Insert room successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    example: Insert room successfully!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /rooms
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}:
    put:
      tags:
        - room
      summary: Update room
      description: The function of update room
      parameters:
        - name: id
          in: path
          description: Please enter the room_id you want to update by admin room
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Description the room_name
                emote:
                  type: string
                  description: Description the emoji icon
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Update room successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Update room_name successfully
                  data:
                    type: string
                    default: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '403':
          description: User is not authorized to update this chat room
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 40
                  message:
                    example: User is not authorized to update this chat room
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: The chat room with the given ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The chat room with the given ID was not found
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    delete:
      tags:
        - room
      summary: Deletes a chat room
      description: This endpoint deletes a specific chat room given its ID. Only authorized users can delete chat rooms.
      operationId: deleteChatRoom
      parameters:
        - name: id
          in: path
          description: ID of the chat room delete
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Deleted the chat room successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 204
                  message:
                    example: Deleted the chat room successfully
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '403':
          description: User is not authorized to delete this chat room
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  message:
                    example: User is not authorized to delete this chat room
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: The chat room with the given ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The chat room with the given ID was not found
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/password:
    put:
      tags:
        - room
      summary: Set password for room
      description: The function of set password for room
      parameters:
        - name: id
          in: path
          description: Please enter the room_id you want to update by admin room
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: Description the password
                confirm_password:
                  type: string
                  description: Description the confirm_password
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Update room successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Update room_name successfully
                  data:
                    type: string
                    default: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/invites:
    post:
      tags:
        - room
      summary: Invite users to join group chat
      description: The function of invite users to join group chat
      parameters:
        - name: id
          in: path
          description: Please enter the room_id you want to update by admin room
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipient:
                  type: string
                  description: The person receiving the invitation participates in the group chat
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Create invites successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Create invites successfully
                  data:
                    type: string
                    default: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/dismiss:
    put:
      tags:
        - room
      summary: Turn off group chat notifications
      description: The function of turn off group chat notifications until the user's specified time to reopen them
      parameters:
        - name: id
          in: path
          description: Please enter the room_id you want to dismiss
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                due_to:
                  type: string
                  description: Expiry time to block notifications from chat group
                  format: date-time
                  example: '2024-02-22T00:00:00.000Z'
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Dismiss message successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Dismiss message successfully!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/avatar:
    put:
      tags:
        - room
      summary: Change group chat avatars
      description: Change group chat avatars
      operationId: changeChatAvatar
      parameters:
        - name: id
          in: path
          description: Please enter the room_id you want to change avatar
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation image upload chat groups
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Change avatar group chat successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Change avatar group chat successfully
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Avatar image group chat extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Avatar image group chat extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/background:
    put:
      tags:
        - room
      summary: Change group chat background
      description: Change group chat background
      operationId: changeChatBackground
      parameters:
        - name: id
          in: path
          description: Please enter the room_id you want to change background
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation image upload chat groups
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Change background group chat successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Change background group chat successfully
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Background image group chat extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Background image group chat extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/kick:
    post:
      tags:
        - room
      summary: Kick a user from a chat room
      description: Allows a chat room moderator or admin to kick a user out of a specified chat room. This action removes the user from the chat room participant list and prevents them from sending or receiving messages in the chat room until they are added again.
      operationId: kickMemberFromChatRoom
      parameters:
        - name: id
          in: path
          description: The ID of the chat room from which the user will be kicked.
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                memberId:
                  type: string
                  description: The ID of the user to be kicked from the chat room.
              required:
                - memberId
      responses:
        '200':
          description: Member successfully kicked from the chat room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User has been kicked out successfully.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Missing required fields or invalid room or user ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Missing required fields or invalid room or user ID.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '403':
          description: The requester is not a chat room moderator or admin.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  message:
                    example: The requester is not a chat room moderator or admin.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: The chat room or user does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The chat room or user does not exist.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/ban:
    post:
      tags:
        - room
      summary: Ban a user from a chat room
      description: Allows a chat room moderator or admin to permanently ban a user from a specific chat room. This action prevents the user from rejoining the chat room in the future unless the ban is lifted.
      operationId: banMemberFromChatRoom
      parameters:
        - name: id
          in: path
          description: The ID of the chat room from which the user will be banned.
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                memberId:
                  type: string
                  description: The ID of the user to be banned from the chat room.
                due_to:
                  type: string
                  description: Duration of the ban (e.g., "30d" for 30 days, "permanent" for an indefinite ban). If not specified, defaults to "permanent".
                  format: date-time
                  example: '2024-02-22T00:00:00.000Z'
              required:
                - memberId
      responses:
        '200':
          description: User successfully banned from the chat room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Member has been banned successfully
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Missing required fields or invalid room or user ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Missing required fields or invalid room or user ID.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '403':
          description: the requester is not a chat room moderator or admin.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  message:
                    example: The requester is not a chat room moderator or admin.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: The chat room or user does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The chat room or user does not exist.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/messages:
    get:
      tags:
        - room
      summary: Retrieves a list of messages
      description: Returns a list of messages for the user, optionally filtered by query parameters.
      operationId: getListOfMessage
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the chat room.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page index for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get all messages of room successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get all messages of room successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: The unique identifier of the chat room.
                            name:
                              type: string
                              description: The name of the chat room.
                            owner:
                              type: string
                              description: Unique identifier of the chat room manager.
                            type:
                              type: string
                              default: single
                              description: Type of chat room (single chat - group chat)
                            isPrivate:
                              type: boolean
                              default: false
                              description: Chat room status
                            pinMessage:
                              type: string
                              description: Pin important conversations
                            passowrd:
                              type: string
                              description: Chat room password
                            avatar:
                              type: string
                              description: Image representing the chat room
                            background:
                              type: string
                              description: Chat wallpaper
                            emote:
                              type: string
                              description: The icon represents the conversation
                            isDelete:
                              type: boolean
                              default: false
                              description: Chat room existence status
                            created_at:
                              type: string
                              format: date-time
                              description: The date and time when the chat room was created.
                            updated_at:
                              type: string
                              format: date-time
                              description: The date and time when the chat room was updated.
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 3
                      total_pages:
                        type: integer
                        example: 2
                      total_items:
                        type: integer
                        example: 4
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Unauthorized - API key is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: The chat room or user does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The chat room or user does not exist.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal Server Error - Could not fetch the chat rooms
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    post:
      tags:
        - room
      summary: Create a new chat message
      description: This endpoint allows users to create a new message in a chat session.
      operationId: createMessage
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the chat room.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: The content of the message.
                attachemnts:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        example: 'video'
                      content:
                        type: string
      security:
        - BearerAuth: []
      responses:
        '201':
          description: Mesage ceateed successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    example: Insert room successfully!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/messages/{messageId}:
    delete:
      tags:
        - room
      summary: Delete a specific message in a chat room
      description: This endpoint allows users to delete a specific message from a chat room.
      operationId: deleteMessageInRoom
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the chat room.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
        - name: messageId
          in: path
          required: true
          description: The unique identifier of the message to be deleted.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Message delete successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 204
                  message:
                    example: Message delete successfully
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '403':
          description: User is authenticated but does not have permission to delete the message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  message:
                    example: User is authenticated but does not have permission to delete the message.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: The chat room with the given ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The chat room with the given ID was not found
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/messages/{messageId}/pin:
    post:
      tags:
        - room
      summary: Pin a message in a chat room
      description: This endpoint allows users to pin a specific message within a chat room, making it more visible or accessible to all room members.
      operationId: pinMessageInRoom
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the chat room.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
        - name: messageId
          in: path
          required: true
          description: The unique identifier of the message to be deleted.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Message pinned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 204
                  message:
                    example: Message pinned successfully.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '403':
          description: User is authenticated but does not have permission to delete the message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  message:
                    example: User is authenticated but does not have permission to delete the message.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: The specified room or message does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The specified room or message does not exist.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/messages/{messageId}/react:
    post:
      tags:
        - room
      summary: Accept a room invitation
      description: Allows a user to accept an invitation to enter a specific chat room.
      operationId: messageReact
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the invitation to accept.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
        - name: messageId
          in: path
          required: true
          description: The unique identifier of the invitation to accept.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                emote:
                  type: string
                  description: The content of the emote.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Invitation accepted successfully. Welcome to the room!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Invitation accepted successfully. Welcome to the room!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Invitation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Invitation not found
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/messages/search:
    get:
      tags:
        - room
      summary: Search messages in a room
      description: Allows users to search for messages within a specific chat room by keywords.
      operationId: searchMessages
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the room where messages are being searched.
          schema:
            type: string
        - name: query
          in: query
          required: true
          description: The keywords to search for within the messages.
          schema:
            type: string
        - name: index
          in: query
          required: false
          description: The index from where to start the search results, used for pagination.
          schema:
            type: integer
            format: int32
            minimum: 0
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Search results returned successfully, starting from the provided index.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Search results returned successfully, starting from the provided index.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Room not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Room not found.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/leave:
    post:
      tags:
        - room
      summary: Leave a chat room
      description: Allows a user to leave a specific chat room.
      operationId: leaveRoom
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the chat room.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully left the room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Successfully left the room.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Room_id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Room_id not found
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{inviteId}/accept:
    post:
      tags:
        - room
      summary: Accept a room invitation
      description: Allows a user to accept an invitation to enter a specific chat room.
      operationId: acceptInvitation
      parameters:
        - name: inviteId
          in: path
          required: true
          description: The unique identifier of the invitation to accept.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Invitation accepted successfully. Welcome to the room!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Invitation accepted successfully. Welcome to the room!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Invitation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Invitation not found
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{inviteId}/reject:
    post:
      tags:
        - room
      summary: Reject a room invitation
      description: Allows a user to reject an invitation to enter a specific chat room.
      operationId: rejectInvitation
      parameters:
        - name: inviteId
          in: path
          required: true
          description: The unique identifier of the invitation to accept.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Invitation rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Invitation accepted successfully. Welcome to the room!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Invitaion not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Invitation not found
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /rooms/{id}/members/@me:
    put:
      tags:
        - room
      summary: Change user nickname in a room
      description: Allows a user to change their nickname in a specific chat room.
      operationId: changeUserNickname
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the room where the nickname will be changed.
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  description: The new nickname for the user.
              required:
                - nickname
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Nickname changed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Nickname changed successfully.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: The room or user does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The room or user does not exist.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
components:
  schemas:
    LoginSchema:
      type: object
      properties:
        email:
          type: string
          example: string
        password:
          type: string
          example: string
    ResetPasswordSchema:
      type: object
      properties:
        email:
          type: string
          example: string
        password:
          type: string
          example: string
        confirm_password:
          type: string
          example: string
    ChangePasswordSchema:
      type: object
      properties:
        old_password:
          type: string
          example: string
        password:
          type: string
          example: string
        confirm_password:
          type: string
          example: string
    RegisterSchema:
      type: object
      properties:
        username:
          type: string
          example: string
        email:
          type: string
          example: string
        password:
          type: string
          example: string
        confirm_password:
          type: string
          example: string
        date_of_birth:
          type: string
          format: date
          example: string
    TokenSchema:
      type: object
      properties:
        _id:
          type: integer
          format: int64
          example: 656b0bbd3b0e9defe34fca1a
        email:
          type: string
          example: user123@gmail.com
        role:
          type: string
          example: 'USER'
          enum:
            - USER
            - MODERATOR
            - ADMIN
        token_type:
          type: string
          example: 'AccessToken'
          enum:
            - AccesToken
            - RefreshToken
        iat:
          type: string
          example: '2000-02-22T00:00:00.000Z'
        exp:
          type: string
          example: '2000-02-22T00:00:00.000Z'
    ProfileSchema:
      type: object
      properties:
        _id:
          type: integer
          format: int64
          example: 656b0bbd3b0e9defe34fca1a
        fullname:
          type: string
          example: 'User A'
        username:
          type: string
          example: 'user123'
        email:
          type: string
          example: john@email.com
        phone:
          type: string
          example: '0779381232'
        date_of_birth:
          type: string
          example: '2000-02-22T00:00:00.000Z'
        gender:
          type: string
          description: Gender Type
          example: Male
          enum:
            - Male
            - Female
            - Other
        bio:
          type: string
          example: ''
        address:
          type: string
          example: ''
        website:
          type: string
          example: ''
        avatar:
          type: string
          example: ''
        cover_photo:
          type: string
          example: ''
        created_at:
          type: string
          format: date-time
          example: '2023-12-01T00:00:00.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-12-02T00:00:00.000Z'
      xml:
        name: user
    UpdateProfileSchema:
      type: object
      properties:
        fullname:
          type: string
          example: 'string'
        username:
          type: string
          example: 'string'
        phone:
          type: string
          example: 'string'
        date_of_birth:
          type: string
          format: date-time
          example: 'yyyy-mm-ddTHH:mm:ssss'
        gender:
          type: string
          description: Gender Type
          example: Male
          enum:
            - Male
            - Female
            - Other
        bio:
          type: string
          example: 'string'
        address:
          type: string
          example: 'string'
      xml:
        name: user
    BannerSchema:
      type: object
      properties:
        _id:
          type: string
        user_id:
          type: string
        url:
          type: string
        slug:
          type: string
        description:
          type: string
      xml:
        name: banner
    CreateUserAdminSchema:
      type: object
      properties:
        fullName:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
          example: string
        confirm_password:
          type: string
          example: string
        role:
          type: string
          description: Role Type
          example: User
          enum:
            - Admin
            - Moderator
            - User
        phone:
          type: string
        date_of_birth:
          type: string
        gender:
          type: string
          description: Gender Type
          example: Male
          enum:
            - Male
            - Female
            - Other
        address:
          type: string
      xml:
        name: auth
    UpdateUserByAdminSchema:
      type: object
      properties:
        fullName:
          type: string
          example: 'string'
        username:
          type: string
          example: 'string'
        role:
          type: string
          description: Role Type
          example: User
          enum:
            - Admin
            - Moderator
            - User
        phone:
          type: string
          example: 'string'
        verify:
          type: string
          description: Verify Status
          example: Unverified
          enum:
            - Verified
            - Celerity
            - Banned
        date_of_birth:
          type: string
          format: date-time
          example: 'yyyy-mm-ddTHH:mm:ssss'
        gender:
          type: string
          description: Gender Type
          example: Male
          enum:
            - Male
            - Female
            - Other
        address:
          type: string
          example: 'string'
        bio:
          type: string
          example: 'string'
        website:
          type: string
          example: 'string'
      xml:
        name: auth
    ChatRoomSchema:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the chat room.
        name:
          type: string
          description: The name of the chat room.
        owner:
          type: string
          description: Unique identifier of the chat room manager.
        type:
          type: string
          default: single
          description: Type of chat room (single chat - group chat)
        isPrivate:
          type: boolean
          default: false
          description: Chat room status
        pinMessage:
          type: string
          description: Pin important conversations
        passowrd:
          type: string
          description: Chat room password
        avatar:
          type: string
          description: Image representing the chat room
        background:
          type: string
          description: Chat wallpaper
        emote:
          type: string
          description: The icon represents the conversation
        isDelete:
          type: boolean
          default: false
          description: Chat room existence status
        created_at:
          type: string
          format: date-time
          description: The date and time when the chat room was created.
        updated_at:
          type: string
          format: date-time
          description: The date and time when the chat room was updated.
      xml:
        name: room
