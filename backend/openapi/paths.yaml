openapi: 3.0.3
info:
  title: Code Arena Newbies Coder
  description: |-
    Welcome to the Code Arena API! This API allows developers to access and integrate the functionality of Code Arena with other applications and to create new applications.
    ## Overview
    The Code Arena API provides programmatic access to our coding challenges platform. It allows you to:
    - Fetch a list of coding challenges
    - Submit solutions and get real-time feedback
    - Access user profiles and statistics
    - Participate in real-time coding battles
    Some useful links:
    - [Code Arena repository](https://github.com/Newbies-Coder/code-arena.git)
  contact:
    email: duongquocnam224400@gmail.com
  version: 1.0.11

servers:
  - url: http://localhost:8080

tags:
  - name: auth
    description: Operations about authentication
  - name: user
    description: Operations about user
  - name: banner
    description: Operations about banner
paths:
  /auth/facebook:
    get:
      tags:
        - auth
      summary: User login with facebook
      description: User login with facebook
      operationId: authFacebook
      responses:
        '200':
          description: Login successfully
  /auth/github:
    get:
      tags:
        - auth
      summary: User login with github
      description: User login with github
      operationId: authGithub
      responses:
        '200':
          description: Login successfully
  /auth/google:
    get:
      tags:
        - auth
      summary: User login with google
      description: User login with google
      operationId: authGoogle
      responses:
        '200':
          description: Login successfully
  /auth/linkedin:
    get:
      tags:
        - auth
      summary: User login with linkedin
      description: User login with linkedin
      operationId: authLinkedin
      responses:
        '200':
          description: Login successfully
  /auth/roles:
    get:
      tags:
        - auth
      summary: Get all list user by role into the system
      description: Get all list user by role into the system
      operationId: getAllUserByRole
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users on a page
          required: false
          schema:
            type: integer
            example: 10
        - name: includes
          in: query
          description: Please enter includes contains roles_name
          required: false
          schema:
            type: string
            example: user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get user role successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get user role successfully
                  data:
                    $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /auth/roles
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /auth:
    get:
      tags:
        - auth
      summary: Get all user into the system
      description: Get all user into the system
      operationId: getAllUser
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Get all user successfully'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /auth/pagination-user:
    get:
      tags:
        - auth
      summary: Get all user pagination into the system
      description: Get all user pagination into the system
      operationId: getAllUserPagination
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users on a page
          required: false
          schema:
            type: integer
            example: 10
        - in: query
          name: userId
          description: Optional query string to filter users
          schema:
            type: string
        - in: query
          name: sort_by
          schema:
            type: string
            example: _id
          description: Optional filter to get a specific _id by its type
        - in: query
          name: created_at
          schema:
            type: string
            enum: [asc, desc]
            default: 'asc'
          description: Order of sorting (ascending or descending)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileSchema'
                  page:
                    type: integer
                  limit:
                    type: integer
                  total_page:
                    type: integer
                  total_items:
                    type: integer
        '400':
          description: Bad request (e.g., invalid query parameters)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Bad request (e.g., invalid query parameters)
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /auth/delete-user:
    delete:
      tags:
        - auth
      summary: Delete user
      description: Delete user by user_id and delete a many user
      operationId: deleteUser
      parameters:
        - name: id
          in: query
          description: Please enter the user_id you want to delete
          schema:
            type: array
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Delete many user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Delete many user successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/login:
    post:
      tags:
        - user
      summary: Login user into the system
      description: User login into the system
      operationId: loginUser
      requestBody:
        description: Login information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSchema'
        required: true
      responses:
        '200':
          description: Login successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Login successfully
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 656b0bbd3b0e9defe34fca1a
                      email:
                        type: string
                        example: john@email.com
                      username:
                        type: string
                        example: user123
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                      refresh-token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Request that the password be checked again.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: The password entered is incorrect.
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The email address doesn't exist. Please try the valid one or simply register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: login
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/register:
    post:
      tags:
        - user
      summary: Register user into the system
      description: Register user into the system
      operationId: registerUser
      requestBody:
        description: Register information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSchema'
        required: true
      responses:
        '201':
          description: Send verification email register successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    example: Create account successfully. Please check email verify OTP!
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 656b0bbd3b0e9defe34fca1a
                      email:
                        type: string
                        example: john@email.com
                      username:
                        type: string
                        example: user123
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                      refresh_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: This email address is already in use. Please register with a different email address!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/logout:
    post:
      tags:
        - user
      summary: Logs out current logged in user session
      description: Logs out current logged in user session
      operationId: logoutUser
      security:
        - BearerAuth: []
      requestBody:
        description: Auth logout
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: string
        required: true
      responses:
        '200':
          description: Logout successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Logout successfully
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/verify-otp:
    post:
      tags:
        - user
      summary: Verify OTP
      description: Verifies the One-Time Password (OTP) sent to the user's email.
      operationId: verifyUserOTP
      requestBody:
        description: Auth verify OTP
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  example: string
                  description: The OTP to be verified
        required: true
      responses:
        '200':
          description: OTP successfully verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: You have successfully registered after completing the authentication procedure!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: OTP has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: OTP has expired. Please resubmit the OTP to get a fresh email with it!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: User not found or already verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: User not found or already verified
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: verify-otp
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/resend-verify-otp:
    post:
      tags:
        - user
      summary: User verification OTP resend
      description: Send again to confirm the OTP user
      operationId: resendVerifyOTP
      requestBody:
        description: Resend email verify OTP
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: string
                  description: Resend email resend verify OTP
        required: true
      responses:
        '200':
          description: Successfully resend verify OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Resend verify OTP successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please check refresh token!
                  data:
                    type: object
                    properties:
                      refresh-token:
                        type: string
                        example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/refresh-token:
    post:
      tags:
        - user
      summary: Get back the access token
      description: Get back the access token
      operationId: refreshToken
      requestBody:
        description: Information to retrieve access token
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: string
        required: true
      responses:
        '200':
          description: Successfully retrieved access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Refresh token successfully
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: 656b0bbd3b0e9defe34fca1a
                      email:
                        type: string
                        example: john@email.com
                      username:
                        type: string
                        example: user123
                      access_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                      refresh_token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNjRiZTBhZDJlNDNkMjQ2NDM5NGZlZWRiIiwidG9rZW5fdHlwZSI6MCwidmVyaWZ5IjoxLCJpYXQiOjE2OTEzODMyMjYsImV4cCI6MTY5MTQ2OTYyNn0.HTLX20cB7_z0c9c8FDg3MIx6RJEELHHlmJNZa94ku-o
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please check refresh token!
                  data:
                    type: object
                    properties:
                      refresh-token:
                        type: string
                        example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/forgot-password:
    post:
      tags:
        - user
      summary: Forgot password
      description: Forgot-password
      operationId: forgotPassword
      requestBody:
        description: Your email information
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: string
        required: true
      responses:
        '200':
          description: Send email forgot password successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Email with forgotten password was successfully delivered!
                  data:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: 32e24879ab19f5b36de6hj12
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The email address doesn't exist. Please try the valid one or simply register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: forgot-password
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/verify-forgot-password:
    post:
      tags:
        - user
      summary: Verify forgot-password token
      description: Verifies the One-Time Password (forgot-password token) sent to the user's email.
      operationId: verifyForgotpasswordToken
      requestBody:
        description: Auth verify forgot-password token
        content:
          application/json:
            schema:
              type: object
              properties:
                forgot_password_token:
                  type: string
                  example: string
                  description: The forgot-password token to be verified
        required: true
      responses:
        '200':
          description: Verifies forgot-password token successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Verify forgot-password token successfully!
                  data:
                    type: object
                    properties:
                      userExist:
                        type: boolean
                      message:
                        type: string
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: forgot-password token has expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: Forgot-passwor token has expired
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: User not found or already verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: User not found or already verified
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /verify-forgot-password
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/reset-password:
    post:
      tags:
        - user
      summary: Reset password
      description: Reset
      operationId: resetPassword
      requestBody:
        description: Reset password imformation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordSchema'
        required: true
      responses:
        '200':
          description: Reset password successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Reset password successfully. You can login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: The email address doesn't exist. Please try the valid one or simply register
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: reset-password
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/change-password:
    post:
      tags:
        - user
      summary: Change password
      description: User change passowrd
      operationId: changePassword
      security:
        - BearerAuth: []
      requestBody:
        description: Change password imformation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordSchema'
        required: true
      responses:
        '200':
          description: Change passowrd successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Password successfully changed. You may attempt to login once again.
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: change-password
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/follow/{id}:
    post:
      tags:
        - user
      summary: Follow user
      description: Follow user
      operationId: followUser
      parameters:
        - name: id
          in: path
          description: Please enter the user_id you want to follow
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Follow user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Follow user successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: User_id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: User_id is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/unfollow/{id}:
    delete:
      tags:
        - user
      summary: Unfollow user
      description: Unfollow user
      operationId: unfollowUser
      parameters:
        - name: id
          in: path
          description: Please enter the user_id you want to unfollow
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Unfollow user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Unfollow user successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: User_id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: User_id is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/profile/{id}:
    get:
      tags:
        - user
      summary: Get user by user_id
      description: Get user by user_id
      operationId: getUserByID
      parameters:
        - name: id
          in: path
          description: 'The user_id that needs to be fetched'
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User information was successfully retrieved!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get user infomation successfully
                  data:
                    $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: User_id is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: User_id is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/profile:
    get:
      tags:
        - user
      summary: Get profile into the system
      description: Get profile into the system
      operationId: getMeProfile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get profile successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get profile successfully!
                  data:
                    $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    put:
      tags:
        - user
      summary: Update profile
      description: Update profile user successfully!
      operationId: updateMe
      requestBody:
        description: Information profile user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileSchema'
        required: true
      responses:
        '200':
          description: Update profile user successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Update profile user successfully!
                  data:
                    $ref: '#/components/schemas/ProfileSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/avatar:
    post:
      tags:
        - user
      summary: Upload avatar user
      description: Upload avatar
      operationId: uploadAvatar
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation image upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Upload avatar successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Upload avatar successfully
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        type: string
                        example: 'http://res.cloudinary.com/de7hnxr0e/image/upload/v1701942785/avatar/it3nquretum21jkqv2ii.jpg'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Avatar image extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Avatar image extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/thumbnail:
    post:
      tags:
        - user
      summary: Upload thumbnail profile user
      description: Upload thumbnail profile user
      operationId: uploadThumbnail
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation thumbnail profile upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Upload thumbnail successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Upload thumbnail successfully!
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        type: string
                        example: 'http://res.cloudinary.com/de7hnxr0e/image/upload/v1701942785/avatar/it3nquretum21jkqv2ii.jpg'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Thumnail image extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Thumnail image extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/blocked:
    get:
      tags:
        - user
      summary: Get all list user blocked into the system
      description: Get all list user blocked into the system
      operationId: getAllUserBlocked
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users on a page
          required: false
          schema:
            type: integer
            example: 10
        - in: query
          name: created_at
          schema:
            type: string
            enum: [asc, desc]
            default: 'asc'
          description: Order of sorting (ascending or descending)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get blocked user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get blocked user successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        example: [{ id: '656b0bbd3b0e9defe34fcaq2', 'blockerId': '656b0bbd3b0e9defe34fca1a', 'blockedId': '656b0bbd3b0e9defe34fca1a' }]
                      pageIndex:
                        type: number
                        example: 0
                      pageSize:
                        type: number
                        example: 10
                      totalRow:
                        type: number
                        example: 1
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    post:
      tags:
        - user
      summary: Blocked user
      description: Blocked user
      operationId: insertBlocked
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              type: object
              properties:
                blockedId:
                  type: string
                  example: string
        required: true
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Blocked user successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Blocked user successfully!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '409':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: User already been blocked
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /@me/blocked
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/@me/unblocked/{id}:
    delete:
      tags:
        - user
      summary: Delete blocked user list unblock
      description: Delete blocked user list unblock
      operationId: deleteBlockedUser
      parameters:
        - name: id
          in: path
          description: 'The user_id that needs to be delete'
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Delete blocked user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Delete many user successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/favorite:
    get:
      tags:
        - user
      summary: Get list closed friends into the system
      description: Get list closed friends into the system
      operationId: getUserFavorite
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: Number of users on a page
          required: false
          schema:
            type: integer
            example: 10
        - in: query
          name: created_at
          schema:
            type: string
            enum: [asc, desc]
            default: 'asc'
          description: Order of sorting (ascending or descending)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get list of closed friends successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get list of closed friends successfully!
                  data:
                    type: object
                    properties:
                      _id:
                        type: integer
                        format: int64
                        example: 656b0bbd3b0e9defe34fca1a
                      fullname:
                        type: string
                        example: 'User A'
                      username:
                        type: string
                        example: 'user123'
                      email:
                        type: string
                        example: john@email.com
                      date_of_birth:
                        type: string
                        example: '2000-02-22T00:00:00.000Z'
                      avatar:
                        type: string
                        example: ''
                      cover_photo:
                        type: string
                        example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    post:
      tags:
        - user
      summary: Add user to favorite friends list
      description: Add user to favorite friends list
      operationId: insertUserFavorite
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              type: object
              properties:
                friendId:
                  type: string
                  example: string
        required: true
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Add user to favorite friends list successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Add user to favorite friends list successfully!
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '409':
          description: Compare user data to the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: User already been blocked
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: favorite
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/favorite/{id}:
    delete:
      tags:
        - user
      summary: Remove user to favorite friend list
      description: Remove user to favorite friend list
      operationId: deleteFavoriteFriend
      parameters:
        - name: id
          in: path
          description: 'The user_id that needs to be delete'
          required: true
          schema:
            type: string
            format: MongoId
            example: 64be0ad2e43d2464394feedb
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Delete user to favorite friend list successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Delete user to favorite friend list successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Invalid input or user_id format
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Invalid input or user_id format
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: user not found
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /users/test-token:
    post:
      tags:
        - user
      summary: Test token user into the system
      description: Test token user into the system
      operationId: testToken
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Get token user successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Test token successfully
                  data:
                    $ref: '#/components/schemas/TokenSchema'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: Header authorization is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You are not currently logged in to the system!
                  data:
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /banners:
    get:
      tags:
        - banner
      summary: Get all banner
      description: Retrieve a list of banners with pagination, sorting, and optional filtering by banner_id.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page index for pagination
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
        - in: query
          name: bannerId
          schema:
            type: string
          description: Optional filter to get a specific banner by its ID
        - in: query
          name: sort_by
          schema:
            type: string
            default: '_id'
          description: Field to sort the results by
        - in: query
          name: sort_order
          schema:
            type: string
            enum: [asc, desc]
            default: 'asc'
          description: Order of sorting (ascending or descending)
      responses:
        '200':
          description: Get all banner successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get all banner successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/BannerSchema'
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 3
                      total_page:
                        type: integer
                        example: 2
                      total_items:
                        type: integer
                        example: 4
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    post:
      tags:
        - banner
      summary: Insert a new banner with images
      description: Inserts the banner details into the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                slug:
                  type: string
                  description: The slug for the banner
                description:
                  type: string
                  description: Description image for the banner
                url:
                  type: string
                  description: Image for the banner
      security:
        - BearerAuth: []
      responses:
        '201':
          description: Insert banner successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    example: Insert banner successfully!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '422':
          description: Please provide complete input info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 422
                  message:
                    example: Validation error
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Please fill all required details.
                      path:
                        type: string
                        example: /banners
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /banners/{id}:
    get:
      tags:
        - banner
      summary: Get banner by user_id
      description: Retrieve a list of banners with pagination, sorting, and optional filtering by user_id.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique ID of the user
      responses:
        '200':
          description: Get all banner with user_id successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Get all banner with user_id successfully
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/BannerSchema'
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 3
                      total_page:
                        type: integer
                        example: 2
                      total_items:
                        type: integer
                        example: 4
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
    delete:
      tags:
        - banner
      summary: Delete a banner
      description: Deletes a banner from the database and associated storage based on its unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Unique ID of the banner to delete
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Banner successfully deleted (No Content)
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 204
                  message:
                    example: Delete banners successfully
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Invalid banner ID format
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Invalid banner ID format
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '404':
          description: Banner not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    example: Banner not found
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /upload/media:
    post:
      tags:
        - upload
      summary: Upload single image
      description: Upload single image
      operationId: uploadSingleImage
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation image upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: Upload single image successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Upload single image successfully
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        type: string
                        example: 'http://res.cloudinary.com/de7hnxr0e/image/upload/v1701942785/avatar/it3nquretum21jkqv2ii.jpg'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Image extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Image extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
  /upload/media_multiple:
    post:
      tags:
        - upload
      summary: Uploads multiple images
      description: Allows for uploading multiple image files.
      operationId: uploadMultipleImage
      security:
        - BearerAuth: []
      requestBody:
        description: Imformation image upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: array
                  items:
                    type: string
                    format: binary
        required: true
      responses:
        '200':
          description: Upload multiple image successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    example: Upload multiple image successfully
                  data:
                    type: object
                    properties:
                      avatarUrl:
                        type: string
                        example: 'http://res.cloudinary.com/de7hnxr0e/image/upload/v1701942785/avatar/it3nquretum21jkqv2ii.jpg'
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '400':
          description: Image extension is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    example: Image extension is invalid
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '401':
          description: You are not authorized to carry out this task
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    example: You do not have permission to perform this task. Please login again!
                  data:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    example: Internal server error
                  messages:
                    type: string
                    example: ''
                  dateTime:
                    type: string
                    format: date-time
                    example: '2024-02-22T00:00:00.000Z'
components:
  schemas:
    LoginSchema:
      type: object
      properties:
        email:
          type: string
          example: string
        password:
          type: string
          example: string
    ResetPasswordSchema:
      type: object
      properties:
        email:
          type: string
          example: string
        password:
          type: string
          example: string
        confirm_password:
          type: string
          example: string
    ChangePasswordSchema:
      type: object
      properties:
        old_password:
          type: string
          example: string
        password:
          type: string
          example: string
        confirm_password:
          type: string
          example: string
    RegisterSchema:
      type: object
      properties:
        username:
          type: string
          example: string
        email:
          type: string
          example: string
        password:
          type: string
          example: string
        confirm_password:
          type: string
          example: string
        date_of_birth:
          type: string
          format: date
          example: string
    TokenSchema:
      type: object
      properties:
        _id:
          type: integer
          format: int64
          example: 656b0bbd3b0e9defe34fca1a
        email:
          type: string
          example: user123@gmail.com
        role:
          type: string
          example: 'USER'
          enum:
            - USER
            - MODERATOR
            - ADMIN
        token_type:
          type: string
          example: 'AccessToken'
          enum:
            - AccesToken
            - RefreshToken
        iat:
          type: string
          example: '2000-02-22T00:00:00.000Z'
        exp:
          type: string
          example: '2000-02-22T00:00:00.000Z'
    ProfileSchema:
      type: object
      properties:
        _id:
          type: integer
          format: int64
          example: 656b0bbd3b0e9defe34fca1a
        fullname:
          type: string
          example: 'User A'
        username:
          type: string
          example: 'user123'
        email:
          type: string
          example: john@email.com
        phone:
          type: string
          example: '0779381232'
        date_of_birth:
          type: string
          example: '2000-02-22T00:00:00.000Z'
        gender:
          type: string
          description: Gender Type
          example: Male
          enum:
            - Male
            - Female
            - Other
        bio:
          type: string
          example: ''
        address:
          type: string
          example: ''
        website:
          type: string
          example: ''
        avatar:
          type: string
          example: ''
        cover_photo:
          type: string
          example: ''
        created_at:
          type: string
          format: date-time
          example: '2023-12-01T00:00:00.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-12-02T00:00:00.000Z'
      xml:
        name: user
    UpdateProfileSchema:
      type: object
      properties:
        fullname:
          type: string
          example: 'string'
        username:
          type: string
          example: 'string'
        phone:
          type: string
          example: 'string'
        date_of_birth:
          type: string
          format: date-time
          example: 'yyyy-mm-ddTHH:mm:ssss'
        gender:
          type: string
          description: Gender Type
          example: Male
          enum:
            - Male
            - Female
            - Other
        bio:
          type: string
          example: 'string'
        address:
          type: string
          example: 'string'
      xml:
        name: user
    BannerSchema:
      type: object
      properties:
        _id:
          type: string
        user_id:
          type: string
        url:
          type: string
        slug:
          type: string
        description:
          type: string
      xml:
        name: banner
